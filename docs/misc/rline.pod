=head1 Example repository

 Legend
 * cX ... commit number X (main rline v1)
 * cXb ... commit number X, rline with marked as b
 * vX ... rline marked as X

Commits ordered by 'committer date' are c1, c2, c3, c4, c5x, c6x, c7, c8, c9, c10y, c11z, c12y.

     |c1 (-)  -> v1 ... no parent
     |c2 (c1) -> v1 ... one parent without descendant -> inherit v1 from c1
     |c3 (c2) -> v1 ... one parent without descendant -> inherit v1 from c2
     |\
     | \
     |  \
   c4|   |   ... c4 (c3) -> v1 ... one parent without descendant -> inherit v1 from c3
     |   |c5x (c3)  -> v2 ... one parent already with one (c4) descendant -> new rline v2
     |   |c6x (c6x) -> v2 ... one parent without descendant -> inherit v2 from c5x
     |  / \
     | /   \ c11z (c6x) -> v4 (one parent already with one (c7) descendant -> new rline v4
     |/    v4
     |
     |c7 (c4,c6x) -> v1  ... more than one parent - c3c merged to c3 -> inherit v1 from c3
     |c8 -> v1 ... one parent without descendant, inherit v1 from c7
     |\
     | \
     |  | c9 (c8) -> v1 ... one parent without descendant, inherit v1 from c8 
 c10y|  |     ... c10y (c8) -> v3 ... one parent already with one (c8) descendant -> new rline v3
 c12y|  |     ... c12y (c10y) -> v3 ... one parent without descendant, inherit v3 from c10y
    v3  v1
 (master)

 State:
 * v1, v3 (master), v4 - not merged yet
 * v2 - already merged to v1


=head1 Metacode

 To fill rline table and rcommit.rline_id
 * no parent -> add rline (see below)
 * one parent without descendant -> inherit rline
 * one parent already with any descendant -> add rline (see below)
 * more than one parent - first parent is cX -> inherit rline from cX
 
 Add new rline (found not merge commit give type, see above)
 * find max rline_num for rep_id (rline_id -> rcommit_id -> rep_id)
 * insert to rline (to_rcommit_id is same as from_rcommit_id)
 * insert self link to rline_hier
 
 Finishing
 * Update rline.to_rcommit_id values from cache.

=head1 Table rref_rcommit

 * rref_id
 * rcommit_id

 rref data change
 * same rline_id - add new rcommits
 * changed rline_id
 ** load rcommits history - make changes


=head1 Tables content for example

 Table rline
 rline_id  first_rcommit_id  last_rcommit_id
 1 (v1),   c1,               c12y
 2 (v2),   c5x (v1),         c6x
 3 (v3),   c10y (v1),        c12y
 4 (v4),   c11z (v2),        c11z


=head1 Used to

 These rline table is used to get some ancestors for given rcommit_id (rcommit_idA):
 * for rcommit_idA get rcommit rline_idA ( rcommit.rline_id )
 * get all rcommits where rcommit.rline_id = rline_idA and commmitter_time <= commmitter_time of rcommit_idA
 * so e.g.
 ** for c9 (v1) you get c1, c2, c3, c4, c7, c8, c9
 ** for c4 (v1) you get c1, c2, c3, c4
 ** for c6x (v2) you get c5x, c6x
 ** for c10y (v3) you get c10y, c12y
 ** for c11z (v4) you get c11z

 To get full history for c6x (c6x, c5x, c3, c2, c1):
 * use prev instructions, so for c6x you get c6x, c5x
 * get parent fo c5x (first commit for rline_idA) -> c3
 * get parent rline_idB for this commit c3 -> v1
 * add full history of c3 (repeat steps for c3)
 * ....


